plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.6'
    id 'io.spring.dependency-management' version '1.1.4'
    id 'com.github.johnrengelman.shadow' version '8.1.1'
    id 'me.champeau.jmh' version '0.7.2'
}

group = 'iorihuang'
version = '1.0-SNAPSHOT'
sourceCompatibility = '17'

repositories {
    mavenLocal()
    mavenCentral()
}

dependencies {
    implementation('org.springframework.boot:spring-boot-starter-web') {
        exclude group: 'org.slf4j', module: 'slf4j-simple'
    }
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    implementation 'org.springframework.boot:spring-boot-starter-cache'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    // tracing component
    implementation 'io.micrometer:micrometer-tracing-bridge-brave'
    implementation 'io.micrometer:micrometer-core'
    implementation 'com.github.ben-manes.caffeine:caffeine:3.1.8'
    implementation 'org.projectlombok:lombok:1.18.30'
    implementation('it.ozimov:embedded-redis:0.7.3') {
        exclude group: 'org.slf4j', module: 'slf4j-simple'
    }
//    runtimeOnly 'com.h2database:h2'
    implementation 'com.h2database:h2'
    annotationProcessor 'org.projectlombok:lombok:1.18.30'
    testImplementation platform('org.junit:junit-bom:5.10.0')
    testImplementation 'org.junit.jupiter:junit-jupiter'
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.slf4j', module: 'slf4j-simple'
    }
    // JMH 基准测试依赖（只用于 shadowJar，不进 bootJar）
    implementation 'org.openjdk.jmh:jmh-core:1.37'
    annotationProcessor 'org.openjdk.jmh:jmh-generator-annprocess:1.37'
    implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:3.0.3'
    implementation 'org.aspectj:aspectjweaver:1.9.22'

}
configurations.all {
    exclude group: 'commons-logging', module: 'commons-logging'
}
// 配置复制依赖到 lib 目录
task copyDependencies(type: Copy) {
    from configurations.runtimeClasspath
    into 'build/libs/lib'
}

tasks.build.dependsOn copyDependencies

test {
    useJUnitPlatform()
}

tasks.jar {
    manifest {
        attributes(
                'Main-Class': 'iorihuang.bankaccountmanager.BankAccountManagerApplication'
        )
    }
    exclude 'application.properties'
    exclude 'logback.xml'
}

jar {
    enabled = true
}

bootJar {
    enabled = true
    archiveFileName = 'bank-account-manager.jar'
    launchScript()
    // 排除 JMH 相关依赖
    exclude('org/openjdk/jmh/**')
    exclude('META-INF/services/org.openjdk.jmh.*')
    exclude('jmh.properties')
}

shadowJar {
    // 确保 resources/main 被包含
    from sourceSets.main.output
    // 合并服务文件，避免 spring.factories/spring.components 丢失
    mergeServiceFiles()
    // 可选：指定主类（如需直接 java -jar 运行 JMH benchmark）
    // manifest {
    //     attributes 'Main-Class': 'org.openjdk.jmh.Main'
    // }
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

jmh {
    iterations = 1
    warmupIterations = 5
    timeOnIteration = '5m'
}