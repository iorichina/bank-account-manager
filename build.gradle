plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.6'
    id 'io.spring.dependency-management' version '1.1.4'
}

group = 'iorihuang'
version = '1.0-SNAPSHOT'
sourceCompatibility = '17'

repositories {
    mavenLocal()
    maven {
        url "https://maven.aliyun.com/repository/public"
    }
    mavenCentral()
}

dependencies {
    implementation('org.springframework.boot:spring-boot-starter-web') {
        exclude group: 'org.slf4j', module: 'slf4j-simple'
    }
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    implementation 'org.springframework.boot:spring-boot-starter-cache'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    // tracing component
    implementation 'io.micrometer:micrometer-tracing-bridge-brave'
    implementation 'io.micrometer:micrometer-core'
    implementation 'com.github.ben-manes.caffeine:caffeine:3.1.8'
    implementation 'org.projectlombok:lombok:1.18.30'
    implementation('it.ozimov:embedded-redis:0.7.3') {
        exclude group: 'org.slf4j', module: 'slf4j-simple'
    }
//    runtimeOnly 'com.h2database:h2'
    implementation 'com.h2database:h2'
    annotationProcessor 'org.projectlombok:lombok:1.18.30'
    testImplementation platform('org.junit:junit-bom:5.10.0')
    testImplementation 'org.junit.jupiter:junit-jupiter'
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.slf4j', module: 'slf4j-simple'
    }
    // JMH 基准测试依赖
    testImplementation 'org.openjdk.jmh:jmh-core:1.37'
    testAnnotationProcessor 'org.openjdk.jmh:jmh-generator-annprocess:1.37'
}

// JMH 独立基准测试jar配置
configurations {
    jmh
}
dependencies {
    jmh 'org.openjdk.jmh:jmh-core:1.37'
    testAnnotationProcessor 'org.openjdk.jmh:jmh-generator-annprocess:1.37'
}
task jmhJar(type: Jar) {
    archiveClassifier = 'jmh'
    manifest {
        attributes 'Main-Class': 'org.openjdk.jmh.Main'
    }
    from sourceSets.test.output
    dependsOn testClasses
    from {
        configurations.jmh.collect { it.isDirectory() ? it : zipTree(it) }
    }
    with jar
}

// 配置复制依赖到 lib 目录
task copyDependencies(type: Copy) {
    from configurations.runtimeClasspath
    into 'build/libs/lib'
}

tasks.bootJar.dependsOn copyDependencies

test {
    useJUnitPlatform()
}

tasks.jar {
    manifest {
        attributes(
                'Main-Class': 'iorihuang.bankaccountmanager.BankAccountManagerApplication'
        )
    }
    exclude 'application.properties'
    exclude 'logback.xml'
}

jar {
    enabled = true
}

bootJar {
    enabled = true
    archiveFileName = 'bank-account-manager.jar'
    launchScript()
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}